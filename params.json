{
  "name": "Docker-style-guide",
  "tagline": "The \"Haufe Docker Style Guide\" represent mandantory requirements, recommended best practices and informational resources for using Docker in official (public or internal) Haufe products, services or solutions.",
  "body": "# **Haufe Docker Style Guide**\r\n\r\n![Haufe](images/logo-haufede.png) \r\n![Docker](images/docker-logo.png)\r\n\r\n## Introduction\r\n\r\nDocker is a technology, that provides:\r\n\r\n- unique way to include a softwarepackage and all its dependencies into one single package: **Docker Images**\r\n- a lightweight solution for process-isolation in contrast to the heavier Virtual-Machine approach: **Docker Containers**\r\n- a runtime to decouple the Linux installation inside and outside of a Docker Container (with the exception of the kernel being shared): **Docker Engine**\r\n- a solution to combine, configure and control multiple containers, networks and hosts: **Docker Compose**\r\n- a tool to prepare and manage single or clustered systems running the Docker Engine: **Docker Machine**\r\n- an almost explosively growing system of tools and pre-packaged appplications ... by Docker Inc., other Companies and \"The Community\": Rancher, Consul, Panamax, ...\r\n\r\nThe overall architecture is explained in the original Docker documentation in [Understand the architecture](https://docs.docker.com/engine/understanding-docker/)\r\n\r\nYou find a slightly outdated, but quite good Docker overview at Peter Rossbachs [Docker Basics](https://github.com/rossbachp/docker-basics/blob/master/slides.md)\r\n\r\nThe [Official Docker Documentation](https://docs.docker.com/) gives a good overview about the main component and its accompanying tools on the [Introduction to Engine user guide](https://docs.docker.com/engine/userguide/intro/)\r\n\r\n## The style guide\r\n\r\nThis set of documents called the \"**Haufe Docker Style Guide**\" represent **mandantory requirements**, recommended best practices and informational resources for using **Docker** in **official (public or internal) Haufe products, services or solutions**.\r\n\r\n### When to use the style guide?\r\n\r\nThe \"**Haufe Docker Style Guide**\" **MUST** be used when you **create**, **modifiy** or **extend** Docker based solutions.\r\n\r\n**Existing** Docker installations and/or components **might** have to adapt out of specific security or business reasons.\r\n\r\n### Who has to use the style guide?\r\nIt is the responsibility of Developers, Release Engineers AND Runtime Operators to apply the style guide to a specific project!\r\n\r\n>\tPlease follow the style guide, but don't follow blindly!\r\n>\tYou can break the rules with justification.\r\n\r\n### How to ask for changes to the style guide?\r\nThis and related documents are \"work in progress\". We’d love your feedback – whether you agree, disagree, or have some additional practices and tips to add.\r\n\r\n>\tWe encourage you to improve the style guide with modifications and extensions.\r\n>\tInform the CTO Office (mailto:_CTOLeads@haufe-lexware.com) in this cases.\r\n>\r\n>\tPlease contribute!\r\n\r\n## **Style Guide**\r\n- [Haufe's Docker Toolset](HaufeDockerToolset.md)\r\n- [DRAFT - Docker In Production @Haufe](DRAFT-HaufeDockerInProduction.md)\r\n- [Docker Host](DockerHost.md)\r\n- [Docker Machine](DockerMachine.md)\r\n- [Docker Engine](DockerEngine.md)\r\n- [Dockerfile](Dockerfile.md)\r\n\t- [Best Practices](BestPracticesDockerfile.md)\r\n- [Docker Image](DockerImage.md)\r\n- [Docker Container](DockerContainer.md)\r\n\t- [Best Practices](BestPracticesContainer.md)\r\n- [Docker Compose](DockerCompose.md)\r\n\t- [Best Practices](BestPracticesCompose.md)\r\n\r\n## To be done ...\r\n- [Network, Service Discovery etc.](.md)\r\n- [Monitoring](.md)\r\n- [Microservices](.md)\r\n- [\"Dockerizing\" existing solutions](.md)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}